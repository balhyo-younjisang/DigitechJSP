/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2025-04-14 09:51:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import nailart.DBConnection;
import java.sql.Connection;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/./component/header.jsp", Long.valueOf(1744619449293L));
    _jspx_dependants.put("/./component/footer.jsp", Long.valueOf(1744619647090L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("nailart.DBConnection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

Connection nail_conn = DBConnection.getConnection();
String nail_sql = "select menucode, '[' || menucode || ']' || menuname as menuname from tbl_menu where menucode like 'N%'";
PreparedStatement nail_pstmt = nail_conn.prepareStatement(nail_sql);
ResultSet nail_rs = nail_pstmt.executeQuery();

Connection p_conn = DBConnection.getConnection();
String p_sql = "select menucode, '[' || menucode || ']' || menuname as menuname from tbl_menu where menucode like 'P%'";
PreparedStatement p_pstmt = p_conn.prepareStatement(p_sql);
ResultSet p_rs = p_pstmt.executeQuery();

Connection e_conn = DBConnection.getConnection();
String e_sql = "select menucode, '[' || menucode || ']' || menuname as menuname from tbl_menu where menucode like 'E%'";
PreparedStatement e_pstmt = e_conn.prepareStatement(e_sql);
ResultSet e_rs = e_pstmt.executeQuery();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>네일아트 관리 프로그램</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/style.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("	<div>\r\n");
      out.write("		<h1>네일아트관리 프로그램</h1>\r\n");
      out.write("	</div>\r\n");
      out.write("	<nav>\r\n");
      out.write("		<ul class=\"gnb\">\r\n");
      out.write("			<li><a href=\"menu.jsp\">네일메뉴조회</a></li>\r\n");
      out.write("			<li><a href=\"register.jsp\">네일실적등록</a></li>\r\n");
      out.write("			<li><a href=\"price.jsp\">네일실적조회</a></li>\r\n");
      out.write("			<li><a href=\"data.jsp\">네일아트통계</a></li>\r\n");
      out.write("			<li><a href=\"index.jsp\">홈으로</a></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</nav>\r\n");
      out.write("</header>");
      out.write("\r\n");
      out.write("	<main>\r\n");
      out.write("		<section class=\"title\">\r\n");
      out.write("			<h2 style=\"text-align: center\">네일실적등록</h2>\r\n");
      out.write("		</section>\r\n");
      out.write("		<section class=\"content\">\r\n");
      out.write("			<form onsubmit=\"return check()\" method=\"post\" action=\"register_action.jsp\">\r\n");
      out.write("				<table border=\"1\">\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>번호</td>\r\n");
      out.write("						<td><input type=\"number\" id=\"p_number\" name=\"p_number\">예)1</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>고객아이디</td>\r\n");
      out.write("						<td><input type=\"text\" id=\"customerid\" name=\"customerid\">예)C001</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>고객등급</td>\r\n");
      out.write("						<td><select name=\"grade\">\r\n");
      out.write("								<option value=\"V\">[V]우수고객</option>\r\n");
      out.write("								<option value=\"S\">[S]학생고객</option>\r\n");
      out.write("								<option value=\"G\">[G]일반고객</option>\r\n");
      out.write("						</select> 예)[V]우수고객</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>네일코드</td>\r\n");
      out.write("						<td><select name=\"menucode1\">\r\n");
      out.write("								");

								while (nail_rs.next()) {
								
      out.write("\r\n");
      out.write("								<option value=");
      out.print(nail_rs.getString("menucode"));
      out.write('>');
      out.print(nail_rs.getString("menuname"));
      out.write("</option>\r\n");
      out.write("								");

								}
								
      out.write("\r\n");
      out.write("						</select>예)[N01]풀코트</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>페디코드</td>\r\n");
      out.write("						<td><select name=\"menucode2\">\r\n");
      out.write("								");

								while (p_rs.next()) {
								
      out.write("\r\n");
      out.write("								<option value=");
      out.print(p_rs.getString("menucode"));
      out.write('>');
      out.print(p_rs.getString("menuname"));
      out.write("</option>\r\n");
      out.write("								");

								}
								
      out.write("\r\n");
      out.write("						</select>예)[P01]풀코트</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>기타코드</td>\r\n");
      out.write("						<td><select name=\"menucode3\">\r\n");
      out.write("								");

								while (e_rs.next()) {
								
      out.write("\r\n");
      out.write("								<option value=");
      out.print(e_rs.getString("menucode"));
      out.write('>');
      out.print(e_rs.getString("menuname"));
      out.write("</option>\r\n");
      out.write("								");

								}
								
      out.write("\r\n");
      out.write("						</select>예)[E00]해당없음</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>방문일자</td>\r\n");
      out.write("						<td><input type=\"text\" id=\"visitdate\" name=\"visitdate\" maxlength=\"6\">예)230801</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td colspan=\"2\" style=\"text-align: center;\">\r\n");
      out.write("							<button type=\"submit\">등록</button>\r\n");
      out.write("							<button type=\"button\" onclick=\"reset()\">다시쓰기</button>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("			</form>\r\n");
      out.write("		</section>\r\n");
      out.write("	</main>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<footer>\r\n");
      out.write("	<h3>Copyright&copy;2023 All right reserved HRD</h3>\r\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("	function check() {\r\n");
      out.write("		const p_number = document.getElementById(\"p_number\").value;\r\n");
      out.write("		const customerid = document.getElementById(\"customerid\").value;\r\n");
      out.write("		const visitdate = document.getElementById(\"visitdate\").value;\r\n");
      out.write("		\r\n");
      out.write("		if(!p_number) {\r\n");
      out.write("			alert(\"번호가 입력되지 않았습니다!\");\r\n");
      out.write("			return false;\r\n");
      out.write("		} \r\n");
      out.write("		if(!customerid) {\r\n");
      out.write("			alert(\"고객아이디가 입력되지 않았습니다!\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(!visitdate) {\r\n");
      out.write("			alert(\"방문일자가 입력되지 않았습니다!\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		alert(\"네일 실적 등록이 완료되었습니다!\");\r\n");
      out.write("		return true;\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");

DBConnection.close(nail_rs, nail_pstmt, nail_conn);
DBConnection.close(p_rs, p_pstmt, p_conn);
DBConnection.close(e_rs, e_pstmt, e_conn);

      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
