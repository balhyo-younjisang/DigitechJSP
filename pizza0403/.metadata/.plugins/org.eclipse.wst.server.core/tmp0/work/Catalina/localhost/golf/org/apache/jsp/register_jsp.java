/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2025-04-11 05:12:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import golf.DBConnection;
import java.sql.Connection;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/./component/header.jsp", Long.valueOf(1744343335585L));
    _jspx_dependants.put("/./component/footer.jsp", Long.valueOf(1744343514288L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("golf.DBConnection");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

Connection member_conn = DBConnection.getConnection();

String member_sql = "SELECT MEM_NO, MEM_NM FROM tbl_member_202305";
PreparedStatement member_pstmt = member_conn.prepareStatement(member_sql);
ResultSet member_rs = member_pstmt.executeQuery();

Connection class_conn = DBConnection.getConnection();
String class_sql = "SELECT class_nm, class_price, teacher_cd from tbl_teacher_202305";
PreparedStatement class_pstmt = class_conn.prepareStatement(class_sql);
ResultSet class_rs = class_pstmt.executeQuery();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>골프 연습장 회원관리 프로그램 ver 1.0</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/style.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("	<div>\r\n");
      out.write("		<h1>골프 연습장 회원관리 프로그램 ver 1.0</h1>\r\n");
      out.write("	</div>\r\n");
      out.write("	<nav>\r\n");
      out.write("		<ul class=\"gnb\">\r\n");
      out.write("			<li><a href=\"teacher.jsp\">강사조회</a></li>\r\n");
      out.write("			<li><a href=\"register.jsp\">수강신청</a></li>\r\n");
      out.write("			<li><a href=\"select.jsp\">회원정보조회</a></li>\r\n");
      out.write("			<li><a href=\"cost.jsp\">강사매출현황</a></li>\r\n");
      out.write("			<li><a href=\"index.jsp\">홈으로</a></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</nav>\r\n");
      out.write("</header>");
      out.write("\r\n");
      out.write("	<main>\r\n");
      out.write("		<section class=\"title\">\r\n");
      out.write("			<h2>수강신청</h2>\r\n");
      out.write("		</section>\r\n");
      out.write("		<section class=\"content\">\r\n");
      out.write("			<form onsubmit=\"return check()\" action=\"register_action.jsp\" method=\"post\">\r\n");
      out.write("				<table border=\"1\">\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>수강월</td>\r\n");
      out.write("						<td><input id=\"class_ym\" type=\"text\" maxlength=\"6\" name=\"class_ym\">2022년03월\r\n");
      out.write("							예)202203</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>회원명</td>\r\n");
      out.write("						<td><select id=\"mem_nm\">\r\n");
      out.write("								<option value=\"회원명\">회원명</option>\r\n");
      out.write("								");

								while (member_rs.next()) {
								
      out.write("\r\n");
      out.write("								<option value=");
      out.print(member_rs.getString("mem_no"));
      out.write('>');
      out.print(member_rs.getString("mem_nm"));
      out.write("</option>\r\n");
      out.write("								");

								}
								
      out.write("\r\n");
      out.write("						</select></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>회원번호</td>\r\n");
      out.write("						<td><input type=\"text\" name=\"mem_no\" id=\"mem_no\" readonly></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>강의장소</td>\r\n");
      out.write("						<td><select name=\"class_loc\" id=\"class_loc\">\r\n");
      out.write("								<option value=\"강의장소\">강의장소</option>\r\n");
      out.write("								<option value=\"서울본원\">서울본원</option>\r\n");
      out.write("								<option value=\"성남분원\">성남분원</option>\r\n");
      out.write("								<option value=\"대전분원\">대전분원</option>\r\n");
      out.write("								<option value=\"부산분원\">부산분원</option>\r\n");
      out.write("								<option value=\"대구분원\">대구분원</option>\r\n");
      out.write("						</select></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>강의명</td>\r\n");
      out.write("						<td><select id=\"class_nm\" name=\"class_nm\">\r\n");
      out.write("								<option value=\"강의명\">강의명</option>\r\n");
      out.write("								");

								while (class_rs.next()) {
								
      out.write("\r\n");
      out.write("								<option value=");
      out.print(class_rs.getString("teacher_cd"));
      out.write("\r\n");
      out.write("									id=");
      out.print(class_rs.getString("class_nm"));
      out.write("\r\n");
      out.write("									data-price=");
      out.print(class_rs.getString("class_price"));
      out.write('>');
      out.print(class_rs.getString("class_nm"));
      out.write("</option>\r\n");
      out.write("								");

								}
								
      out.write("\r\n");
      out.write("						</select></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>수강료</td>\r\n");
      out.write("						<td><input type=\"text\" id=\"class_price\" name=\"class_price\"></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td colspan=\"2\">\r\n");
      out.write("							<button type=\"submit\">수강신청</button>\r\n");
      out.write("							<button type=\"button\" onclick=\"return resetHandler()\">다시쓰기</button>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("			</form>\r\n");
      out.write("		</section>\r\n");
      out.write("	</main>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<footer>\r\n");
      out.write("	<h3>\r\n");
      out.write("		&copy; 서울디지텍고등학교 모시깽 copy copy\r\n");
      out.write("	</h3>\r\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("	document.getElementById(\"mem_nm\").addEventListener(\"change\", (e) => {\r\n");
      out.write("		document.getElementById(\"mem_no\").value = e.target.value;\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	document.getElementById(\"class_nm\").addEventListener(\"change\", (e) => {\r\n");
      out.write("		const children = document.getElementById(\"class_nm\");\r\n");
      out.write("		let price = 0;\r\n");
      out.write("		for(let item of children.children) {\r\n");
      out.write("			if(item.value === e.target.value) price = item.dataset.price;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		const id = document.getElementById(\"mem_nm\").value;\r\n");
      out.write("		if(id[0] === '2') price /= 2;\r\n");
      out.write("		\r\n");
      out.write("		document.getElementById(\"class_price\").value = price;\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	function check() {\r\n");
      out.write("		if(!document.querySelector(\"#class_ym\").value) {\r\n");
      out.write("			alert(\"수강월을 입력하지 않았습니다.\");\r\n");
      out.write("			document.querySelector(\"#class_ym\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(document.querySelector(\"#mem_nm\").value === '회원명') {\r\n");
      out.write("			alert(\"회원명을 선택하지 않았습니다.\");\r\n");
      out.write("			document.querySelector(\"#mem_nm\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(document.querySelector(\"#class_loc\").value === '강의장소') {\r\n");
      out.write("			alert(\"수강장소를 선택하지 않았습니다.\");\r\n");
      out.write("			document.querySelector(\"#class_loc\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(document.querySelector(\"#class_nm\").value === '강의명') {\r\n");
      out.write("			alert(\"강의명을 입력하지 않았습니다.\");\r\n");
      out.write("			document.querySelector(\"#class_nm\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		alert(\"수강신청이 완료되었습니다.\");\r\n");
      out.write("		return true;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function resetHandler() {\r\n");
      out.write("		alert(\"입력정보를 초기화합니다.\");\r\n");
      out.write("		location.reload();\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");

DBConnection.close(member_rs, member_pstmt, member_conn);
DBConnection.close(class_rs, class_pstmt, class_conn);

      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
